# Licensed under the MIT License
# https://github.com/craigahobbs/schema-markdown-js/blob/main/LICENSE

#
# The Schema Markdown Documentation application
#
# url - The Schema Markdown text or JSON resource URL
# title - The schema title
#
async function schemaMarkdownDoc(url, title)

    # URL override?
    url = if(vURL != null, vURL, url)

    # If no URL was provided, use the Schema Markdown type model schema
    jumpif (url != null) urlNotNull
        types = schemaTypeModel()
        jump urlNotNullDone
    urlNotNull:
        # Fetch the Schema Markdown resource
        isJSON = endsWith(url, '.json')
        await schemaResource = if(isJSON, fetch(url), fetch(url, objectNew('type', 'text')))
        jumpif (schemaResource != null) schemaMarkdownTextOK
            markdownPrint('**Error:** Failed to fetch Schema Markdown resource "' + url + '"')
            return
        schemaMarkdownTextOK:

        # Validate or parse the Schema Markdown resource
        types = if(isJSON, schemaValidateTypeModel(schemaResource), schemaParseString(schemaResource))
    urlNotNullDone:

    # Type page?
    jumpif (vType == null) noTypePage
        jumpif (objectGet(types, vType) != null) typeOK
            markdownPrint('**Error:** Unknown type "' + vType + '"')
            return
        typeOK:
        setDocumentTitle(vType)
        markdownPrint('[Home](' + if(vURL != null, "#var.vURL='" + vURL + "')", '#var=)'))
        schemaPrint(types, vType)
        return
    noTypePage:

    # Index page...
    title = if(title != null && vURL == null, title, url)
    setDocumentTitle(title)
    markdownPrint('# ' + title)
    sections = arrayNew('Actions', 'Enums', 'Structs', 'Typedefs')
    sectionTypes = arrayNew('action', 'enum', 'struct', 'typedef')
    typeNames = objectKeys(types)
    ixSection = 0
    sectionLoop:
        hasSection = false
        ixTypeName = 0
        typeLoop:
            typeName = arrayGet(typeNames, ixTypeName)
            typeType = arrayGet(objectKeys(objectGet(types, typeName)), 0)
            jumpif (typeType != arrayGet(sectionTypes, ixSection)) skipType
                if(!hasSection, markdownPrint('', '### ' + arrayGet(sections, ixSection)))
                hasSection = true
                typeURL = '#' + if(vURL != null, "var.vURL='" + vURL + "'&", '') + "var.vType='" + typeName + "'"
                markdownPrint('', '[' + typeName + '](' + typeURL + ')')
            skipType:
            ixTypeName = ixTypeName + 1
        jumpif (ixTypeName < arrayLength(typeNames)) typeLoop
        ixSection = ixSection + 1
    jumpif (ixSection < arrayLength(sections)) sectionLoop

endfunction
